(varsym, var)
(ident, a)
(comma, ,)
(ident, b)
(comma, ,)
(ident, c)
(comma, ,)
(ident, r)
(semicolon, ;)
(readsym, read)
(lparen, ()
(ident, a)
(rparen, ))
(semicolon, ;)
(readsym, read)
(lparen, ()
(ident, b)
(rparen, ))
(semicolon, ;)
(readsym, read)
(lparen, ()
(ident, c)
(rparen, ))
(semicolon, ;)
(ifsym, if)
(ident, a)
(gtr, >)
(ident, b)
(ident, r)
(becomes, :=)
(ident, a)
(semicolon, ;)
(ident, a)
(becomes, :=)
(ident, b)
(semicolon, ;)
(ident, b)
(becomes, :=)
(ident, r)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(ifsym, if)
(ident, b)
(gtr, >)
(ident, c)
(ident, r)
(becomes, :=)
(ident, b)
(semicolon, ;)
(ident, b)
(becomes, :=)
(ident, c)
(semicolon, ;)
(ident, c)
(becomes, :=)
(ident, r)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(ifsym, if)
(ident, a)
(gtr, >)
(ident, b)
(ident, r)
(becomes, :=)
(ident, a)
(semicolon, ;)
(ident, a)
(becomes, :=)
(ident, b)
(semicolon, ;)
(ident, b)
(becomes, :=)
(ident, r)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(writesym, write)
(lparen, ()
(ident, a)
(rparen, ))
(semicolon, ;)
(writesym, write)
(lparen, ()
(ident, b)
(rparen, ))
(semicolon, ;)
(writesym, write)
(lparen, ()
(ident, c)
(rparen, ))
(semicolon, ;)
(endsym, end)
(period, .)
(varsym, var)
(ident, a)
(comma, ,)
(ident, b)
(comma, ,)
(ident, c)
(comma, ,)
(ident, r)
(semicolon, ;)
(readsym, read)
(lparen, ()
(ident, a)
(rparen, ))
(semicolon, ;)
(readsym, read)
(lparen, ()
(ident, b)
(rparen, ))
(semicolon, ;)
(readsym, read)
(lparen, ()
(ident, c)
(rparen, ))
(semicolon, ;)
(ifsym, if)
(ident, a)
(gtr, >)
(ident, b)
(ident, r)
(becomes, :=)
(ident, a)
(semicolon, ;)
(ident, a)
(becomes, :=)
(ident, b)
(semicolon, ;)
(ident, b)
(becomes, :=)
(ident, r)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(ifsym, if)
(ident, b)
(gtr, >)
(ident, c)
(ident, r)
(becomes, :=)
(ident, b)
(semicolon, ;)
(ident, b)
(becomes, :=)
(ident, c)
(semicolon, ;)
(ident, c)
(becomes, :=)
(ident, r)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(ifsym, if)
(ident, a)
(gtr, >)
(ident, b)
(ident, r)
(becomes, :=)
(ident, a)
(semicolon, ;)
(ident, a)
(becomes, :=)
(ident, b)
(semicolon, ;)
(ident, b)
(becomes, :=)
(ident, r)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(writesym, write)
(lparen, ()
(ident, a)
(rparen, ))
(semicolon, ;)
(writesym, write)
(lparen, ()
(ident, b)
(rparen, ))
(semicolon, ;)
(writesym, write)
(lparen, ()
(ident, c)
(rparen, ))
(semicolon, ;)
(endsym, end)
(period, .)
(varsym, var)
(ident, a)
(comma, ,)
(ident, b)
(comma, ,)
(ident, c)
(comma, ,)
(ident, flag)
(comma, ,)
(ident, x)
(comma, ,)
(ident, y)
(comma, ,)
(ident, z)
(comma, ,)
(ident, flag2)
(comma, ,)
(ident, flag3)
(semicolon, ;)
(constsym, const)
(ident, yiban)
(eql, =)
(number, 0)
(comma, ,)
(ident, dengyao)
(eql, =)
(number, 1)
(comma, ,)
(ident, dengyaozhijiao)
(eql, =)
(number, 2)
(comma, ,)
(ident, zhijiao)
(eql, =)
(number, 3)
(comma, ,)
(ident, dengbian)
(eql, =)
(number, 4)
(comma, ,)
(ident, fei)
(eql, =)
(number, 5)
(semicolon, ;)
(proceduresym, procedure)
(ident, dyzhijiao)
(semicolon, ;)
(ifsym, if)
(number, 2)
(times, *)
(ident, x)
(times, *)
(ident, x)
(eql, =)
(ident, y)
(times, *)
(ident, y)
(writesym, write)
(lparen, ()
(ident, dengyaozhijiao)
(rparen, ))
(semicolon, ;)
(ident, flag2)
(becomes, :=)
(number, 1)
(semicolon, ;)
(ident, flag)
(becomes, :=)
(number, 1)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(ifsym, if)
(ident, flag2)
(neq, #)
(number, 1)
(writesym, write)
(lparen, ()
(ident, dengyao)
(rparen, ))
(semicolon, ;)
(ident, flag)
(becomes, :=)
(number, 1)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(callsym, call)
(ident, dyzhijiao)
(semicolon, ;)
(endsym, end)
(period, .)
(varsym, var)
(ident, a)
(comma, ,)
(ident, b)
(comma, ,)
(ident, c)
(comma, ,)
(ident, r)
(semicolon, ;)
(readsym, read)
(lparen, ()
(ident, a)
(rparen, ))
(semicolon, ;)
(readsym, read)
(lparen, ()
(ident, b)
(rparen, ))
(semicolon, ;)
(readsym, read)
(lparen, ()
(ident, c)
(rparen, ))
(semicolon, ;)
(ifsym, if)
(ident, a)
(gtr, >)
(ident, b)
(ident, r)
(becomes, :=)
(ident, a)
(semicolon, ;)
(ident, a)
(becomes, :=)
(ident, b)
(semicolon, ;)
(ident, b)
(becomes, :=)
(ident, r)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(ifsym, if)
(ident, b)
(gtr, >)
(ident, c)
(ident, r)
(becomes, :=)
(ident, b)
(semicolon, ;)
(ident, b)
(becomes, :=)
(ident, c)
(semicolon, ;)
(ident, c)
(becomes, :=)
(ident, r)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(ifsym, if)
(ident, a)
(gtr, >)
(ident, b)
(ident, r)
(becomes, :=)
(ident, a)
(semicolon, ;)
(ident, a)
(becomes, :=)
(ident, b)
(semicolon, ;)
(ident, b)
(becomes, :=)
(ident, r)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(writesym, write)
(lparen, ()
(ident, a)
(rparen, ))
(semicolon, ;)
(writesym, write)
(lparen, ()
(ident, b)
(rparen, ))
(semicolon, ;)
(writesym, write)
(lparen, ()
(ident, c)
(rparen, ))
(semicolon, ;)
(endsym, end)
(period, .)
(varsym, var)
(ident, a)
(comma, ,)
(ident, b)
(comma, ,)
(ident, c)
(comma, ,)
(ident, flag)
(comma, ,)
(ident, x)
(comma, ,)
(ident, y)
(comma, ,)
(ident, z)
(comma, ,)
(ident, flag2)
(comma, ,)
(ident, flag3)
(semicolon, ;)
(constsym, const)
(ident, yiban)
(eql, =)
(number, 0)
(comma, ,)
(ident, dengyao)
(eql, =)
(number, 1)
(comma, ,)
(ident, dengyaozhijiao)
(eql, =)
(number, 2)
(comma, ,)
(ident, zhijiao)
(eql, =)
(number, 3)
(comma, ,)
(ident, dengbian)
(eql, =)
(number, 4)
(comma, ,)
(ident, fei)
(eql, =)
(number, 5)
(semicolon, ;)
(proceduresym, procedure)
(ident, dyzhijiao)
(semicolon, ;)
(ifsym, if)
(number, 2)
(times, *)
(ident, x)
(times, *)
(ident, x)
(eql, =)
(ident, y)
(times, *)
(ident, y)
(writesym, write)
(lparen, ()
(ident, dengyaozhijiao)
(rparen, ))
(semicolon, ;)
(ident, flag2)
(becomes, :=)
(number, 1)
(semicolon, ;)
(ident, flag)
(becomes, :=)
(number, 1)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(ifsym, if)
(ident, flag2)
(neq, #)
(number, 1)
(writesym, write)
(lparen, ()
(ident, dengyao)
(rparen, ))
(semicolon, ;)
(ident, flag)
(becomes, :=)
(number, 1)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(callsym, call)
(ident, dyzhijiao)
(semicolon, ;)
(endsym, end)
(period, .)
(varsym, var)
(ident, a)
(comma, ,)
(ident, b)
(comma, ,)
(ident, c)
(comma, ,)
(ident, flag)
(comma, ,)
(ident, x)
(comma, ,)
(ident, y)
(comma, ,)
(ident, z)
(comma, ,)
(ident, flag2)
(comma, ,)
(ident, flag3)
(semicolon, ;)
(constsym, const)
(ident, yiban)
(eql, =)
(number, 0)
(comma, ,)
(ident, dengyao)
(eql, =)
(number, 1)
(comma, ,)
(ident, dengyaozhijiao)
(eql, =)
(number, 2)
(comma, ,)
(ident, zhijiao)
(eql, =)
(number, 3)
(comma, ,)
(ident, dengbian)
(eql, =)
(number, 4)
(comma, ,)
(ident, fei)
(eql, =)
(number, 5)
(semicolon, ;)
(ifsym, if)
(ident, x)
(times, *)
(ident, x)
(plus, +)
(ident, y)
(times, *)
(ident, y)
(eql, =)
(ident, z)
(times, *)
(ident, z)
(writesym, write)
(lparen, ()
(ident, zhijiao)
(rparen, ))
(semicolon, ;)
(ident, flag)
(becomes, :=)
(number, 1)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(varsym, var)
(ident, a)
(comma, ,)
(ident, b)
(comma, ,)
(ident, c)
(comma, ,)
(ident, r)
(semicolon, ;)
(readsym, read)
(lparen, ()
(ident, a)
(rparen, ))
(semicolon, ;)
(readsym, read)
(lparen, ()
(ident, b)
(rparen, ))
(semicolon, ;)
(readsym, read)
(lparen, ()
(ident, c)
(rparen, ))
(semicolon, ;)
(ifsym, if)
(ident, a)
(gtr, >)
(ident, b)
(ident, r)
(becomes, :=)
(ident, a)
(semicolon, ;)
(ident, a)
(becomes, :=)
(ident, b)
(semicolon, ;)
(ident, b)
(becomes, :=)
(ident, r)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(ifsym, if)
(ident, b)
(gtr, >)
(ident, c)
(ident, r)
(becomes, :=)
(ident, b)
(semicolon, ;)
(ident, b)
(becomes, :=)
(ident, c)
(semicolon, ;)
(ident, c)
(becomes, :=)
(ident, r)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(ifsym, if)
(ident, a)
(gtr, >)
(ident, b)
(ident, r)
(becomes, :=)
(ident, a)
(semicolon, ;)
(ident, a)
(becomes, :=)
(ident, b)
(semicolon, ;)
(ident, b)
(becomes, :=)
(ident, r)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(writesym, write)
(lparen, ()
(ident, a)
(rparen, ))
(semicolon, ;)
(writesym, write)
(lparen, ()
(ident, b)
(rparen, ))
(semicolon, ;)
(writesym, write)
(lparen, ()
(ident, c)
(rparen, ))
(semicolon, ;)
(endsym, end)
(period, .)
(varsym, var)
(ident, a)
(comma, ,)
(ident, b)
(comma, ,)
(ident, c)
(comma, ,)
(ident, flag)
(comma, ,)
(ident, x)
(comma, ,)
(ident, y)
(comma, ,)
(ident, z)
(comma, ,)
(ident, flag2)
(comma, ,)
(ident, flag3)
(semicolon, ;)
(constsym, const)
(ident, yiban)
(eql, =)
(number, 0)
(comma, ,)
(ident, dengyao)
(eql, =)
(number, 1)
(comma, ,)
(ident, dengyaozhijiao)
(eql, =)
(number, 2)
(comma, ,)
(ident, zhijiao)
(eql, =)
(number, 3)
(comma, ,)
(ident, dengbian)
(eql, =)
(number, 4)
(comma, ,)
(ident, fei)
(eql, =)
(number, 5)
(semicolon, ;)
(proceduresym, procedure)
(ident, dyzhijiao)
(semicolon, ;)
(ifsym, if)
(number, 2)
(times, *)
(ident, x)
(times, *)
(ident, x)
(eql, =)
(ident, y)
(times, *)
(ident, y)
(writesym, write)
(lparen, ()
(ident, dengyaozhijiao)
(rparen, ))
(semicolon, ;)
(ident, flag2)
(becomes, :=)
(number, 1)
(semicolon, ;)
(ident, flag)
(becomes, :=)
(number, 1)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(ifsym, if)
(ident, flag2)
(neq, #)
(number, 1)
(writesym, write)
(lparen, ()
(ident, dengyao)
(rparen, ))
(semicolon, ;)
(ident, flag)
(becomes, :=)
(number, 1)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(callsym, call)
(ident, dyzhijiao)
(semicolon, ;)
(endsym, end)
(period, .)
(varsym, var)
(ident, a)
(comma, ,)
(ident, b)
(comma, ,)
(ident, c)
(comma, ,)
(ident, flag)
(comma, ,)
(ident, x)
(comma, ,)
(ident, y)
(comma, ,)
(ident, z)
(comma, ,)
(ident, flag2)
(comma, ,)
(ident, flag3)
(semicolon, ;)
(constsym, const)
(ident, yiban)
(eql, =)
(number, 0)
(comma, ,)
(ident, dengyao)
(eql, =)
(number, 1)
(comma, ,)
(ident, dengyaozhijiao)
(eql, =)
(number, 2)
(comma, ,)
(ident, zhijiao)
(eql, =)
(number, 3)
(comma, ,)
(ident, dengbian)
(eql, =)
(number, 4)
(comma, ,)
(ident, fei)
(eql, =)
(number, 5)
(semicolon, ;)
(ifsym, if)
(ident, x)
(times, *)
(ident, x)
(plus, +)
(ident, y)
(times, *)
(ident, y)
(eql, =)
(ident, z)
(times, *)
(ident, z)
(writesym, write)
(lparen, ()
(ident, zhijiao)
(rparen, ))
(semicolon, ;)
(ident, flag)
(becomes, :=)
(number, 1)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(varsym, var)
(ident, a)
(comma, ,)
(ident, b)
(comma, ,)
(ident, c)
(comma, ,)
(ident, flag)
(comma, ,)
(ident, x)
(comma, ,)
(ident, y)
(comma, ,)
(ident, z)
(comma, ,)
(ident, flag2)
(comma, ,)
(ident, flag3)
(semicolon, ;)
(constsym, const)
(ident, yiban)
(eql, =)
(number, 0)
(comma, ,)
(ident, dengyao)
(eql, =)
(number, 1)
(comma, ,)
(ident, dengyaozhijiao)
(eql, =)
(number, 2)
(comma, ,)
(ident, zhijiao)
(eql, =)
(number, 3)
(comma, ,)
(ident, dengbian)
(eql, =)
(number, 4)
(comma, ,)
(ident, fei)
(eql, =)
(number, 5)
(semicolon, ;)
(ifsym, if)
(ident, a)
(plus, +)
(ident, b)
(gtr, >)
(ident, c)
(ifsym, if)
(ident, a)
(plus, +)
(ident, c)
(gtr, >)
(ident, b)
(ifsym, if)
(ident, b)
(plus, +)
(ident, c)
(gtr, >)
(ident, a)
(ident, flag3)
(becomes, :=)
(number, 1)
(semicolon, ;)
(ifsym, if)
(ident, a)
(eql, =)
(ident, b)
(ifsym, if)
(ident, b)
(eql, =)
(ident, c)
(writesym, write)
(lparen, ()
(ident, dengbian)
(rparen, ))
(semicolon, ;)
(ident, flag)
(becomes, :=)
(number, 1)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(ifsym, if)
(ident, flag)
(neq, #)
(number, 1)
(ifsym, if)
(ident, a)
(eql, =)
(ident, b)
(ident, x)
(becomes, :=)
(ident, a)
(semicolon, ;)
(ident, y)
(becomes, :=)
(ident, c)
(semicolon, ;)
(callsym, call)
(ident, dyzhijiao)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(ifsym, if)
(ident, c)
(eql, =)
(ident, b)
(ident, x)
(becomes, :=)
(ident, b)
(semicolon, ;)
(ident, y)
(becomes, :=)
(ident, a)
(semicolon, ;)
(callsym, call)
(ident, dyzhijiao)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(ifsym, if)
(ident, a)
(eql, =)
(ident, c)
(ident, x)
(becomes, :=)
(ident, a)
(semicolon, ;)
(ident, y)
(becomes, :=)
(ident, b)
(semicolon, ;)
(callsym, call)
(ident, dyzhijiao)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(ifsym, if)
(ident, flag)
(neq, #)
(number, 1)
(ident, x)
(becomes, :=)
(ident, a)
(semicolon, ;)
(ident, y)
(becomes, :=)
(ident, b)
(semicolon, ;)
(ident, z)
(becomes, :=)
(ident, c)
(semicolon, ;)
(callsym, call)
(ident, zhijiao)
(semicolon, ;)
(ident, x)
(becomes, :=)
(ident, a)
(semicolon, ;)
(ident, y)
(becomes, :=)
(ident, c)
(semicolon, ;)
(ident, z)
(becomes, :=)
(ident, b)
(semicolon, ;)
(callsym, call)
(ident, zhijiao)
(semicolon, ;)
(ident, x)
(becomes, :=)
(ident, c)
(semicolon, ;)
(ident, y)
(becomes, :=)
(ident, b)
(semicolon, ;)
(ident, z)
(becomes, :=)
(ident, a)
(semicolon, ;)
(callsym, call)
(ident, zhijiao)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(ifsym, if)
(ident, flag)
(neq, #)
(number, 1)
(ident, wirte)
(lparen, ()
(ident, yiban)
(rparen, ))
(endsym, end)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
(endsym, end)
(semicolon, ;)
